{"version":3,"file":"chunks/4275.faf99ff0.js","mappings":"4MAEIA,EAAe,IAAIC,IAAIC,MAAMC,KAAKC,OAAOC,QAAQ,EAAAC,SAG9C,SAASC,EAAaC,EAAOF,GAClC,GAAqB,IAAjBA,EAAMG,OACR,OAAOD,EAET,IAAIE,EAASF,EACb,IAAK,IAAIG,KAAQL,EAAO,CACtB,IAAIM,EAAiBZ,EAAaa,IAAIF,EAAKG,YAC3C,IAAKF,EAGH,YADAG,QAAQC,KAAK,iBAAiBC,OAAON,EAAKG,aAG5CJ,EAASE,EAAeF,KAAWC,EAAKO,WAC1C,CACA,OAAOR,CACT,C","sources":["webpack:///../../node_modules/@next-core/pipes/dist/esm/index.js"],"sourcesContent":["import { pipes } from \"@easyops-cn/brick-next-pipes\";\nexport { pipes, utils } from \"@easyops-cn/brick-next-pipes\";\nvar PipeRegistry = new Map(Array.from(Object.entries(pipes)));\n\n/** For next-core internal usage only. */\nexport function processPipes(value, pipes) {\n  if (pipes.length === 0) {\n    return value;\n  }\n  var result = value;\n  for (var pipe of pipes) {\n    var registeredPipe = PipeRegistry.get(pipe.identifier);\n    if (!registeredPipe) {\n      // eslint-disable-next-line no-console\n      console.warn(\"Unknown pipe: \".concat(pipe.identifier));\n      return;\n    }\n    result = registeredPipe(result, ...pipe.parameters);\n  }\n  return result;\n}\n//# sourceMappingURL=index.js.map"],"names":["PipeRegistry","Map","Array","from","Object","entries","pipes","processPipes","value","length","result","pipe","registeredPipe","get","identifier","console","warn","concat","parameters"],"sourceRoot":""}