{"version":3,"file":"chunks/change-language.8e6dd044.js","mappings":"6LAQO,SAAeA,EAAcC,GAAA,OAAAC,EAAAC,MAAC,KAADC,UAAA,CAEnC,SAAAF,IAAA,OAAAA,GAAAG,EAAAA,EAAAA,IAFM,UAA8BC,SAC7BC,EAAAA,KAAKP,eAAeM,EAC5B,KAACH,MAAA,KAAAC,UAAA,CAEDI,eAAeC,OACb,yBACAC,EAAAA,EAAAA,qBAAoBV,G,iBCdtB,SAASW,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KACnB,CAAE,MAAOC,GAEP,YADAP,EAAOO,EAET,CACIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CACe,SAASX,EAAkBoB,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOxB,UACT,OAAO,IAAImB,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGtB,MAAMuB,EAAME,GACzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOa,GACdlB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASa,EACnE,CACAd,OAAMe,EACR,GACF,CACF,C","sources":["webpack:///./src/data-providers/changeLanguage.ts","webpack:///../../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { createProviderClass } from \"@next-core/utils/general\";\nimport { i18n } from \"@next-core/i18n\";\n\n/**\n * 更改站点语言。\n *\n * @param lang 语言\n */\nexport async function changeLanguage(lang: string): Promise<void> {\n  await i18n.changeLanguage(lang);\n}\n\ncustomElements.define(\n  \"basic.change-language\",\n  createProviderClass(changeLanguage)\n);\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["changeLanguage","_x","_changeLanguage","apply","arguments","_asyncToGenerator","lang","i18n","customElements","define","createProviderClass","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","fn","self","this","args","err","undefined"],"sourceRoot":""}