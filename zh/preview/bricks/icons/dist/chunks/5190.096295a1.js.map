{"version":3,"file":"chunks/5190.096295a1.js","mappings":"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","sources":["webpack:///./src/data-providers/get-icons.ts","webpack:///./src/data-providers/get-libs.ts","webpack:///./src/data-providers/search-icons.ts"],"sourcesContent":["import { createProviderClass } from \"@next-core/utils/general\";\n\nexport async function getEasyopsIcons(): Promise<Record<string, string[]>> {\n  return (await import(\"../easyops-icon/generated/icons.json\")).default;\n}\n\nexport async function getFaIcons(): Promise<Record<string, string[]>> {\n  return (await import(\"../fa-icon/generated/icons.json\")).default;\n}\n\nexport async function getAntdIcons(): Promise<Record<string, string[]>> {\n  return (await import(\"../antd-icon/generated/icons.json\")).default;\n}\n\ncustomElements.define(\n  \"icons.get-easyops-icons\",\n  createProviderClass(getEasyopsIcons)\n);\n\ncustomElements.define(\"icons.get-fa-icons\", createProviderClass(getFaIcons));\n\ncustomElements.define(\n  \"icons.get-antd-icons\",\n  createProviderClass(getAntdIcons)\n);\n","import { createProviderClass } from \"@next-core/utils/general\";\nimport { LibIconProps } from \"../general-icon/index.jsx\";\nimport { getEasyopsIcons, getFaIcons, getAntdIcons } from \"./get-icons.js\";\nimport { uniqBy } from \"lodash\";\n\nexport interface IconInfo {\n  title: string;\n  icon: LibIconProps;\n  $searchTextPool: string[];\n}\n\nexport interface LibInfo {\n  title: string;\n  lib: string;\n  icons: IconInfo[];\n}\n\nexport async function getLibs(): Promise<LibInfo[]> {\n  const easyopsIconLib = getEasyopsIcons().then((allIcons) => {\n    const iconInfoList: IconInfo[] = [];\n    Object.entries(allIcons).forEach(([category, icons]) => {\n      icons.forEach((iconName) => {\n        iconInfoList.push({\n          title: iconName,\n          icon: {\n            lib: \"easyops\",\n            category,\n            icon: iconName,\n          },\n          $searchTextPool: [iconName, category],\n        });\n      });\n    });\n    return { title: \"easyops\", lib: \"easyops\", icons: iconInfoList };\n  });\n\n  const faIconLib = Promise.all([\n    getFaIcons(),\n    import(\"../fa-icon/generated/alias.json\"),\n  ]).then(([allIcons, { default: aliasMapByCategory }]) => {\n    const iconAliasMapByPrefix: Record<string, Record<string, string[]>> = {};\n    Object.entries(aliasMapByCategory).forEach(([prefix, aliasesMap]) => {\n      iconAliasMapByPrefix[prefix] = {};\n      Object.entries(aliasesMap).forEach(([alias, iconName]) => {\n        iconAliasMapByPrefix[prefix][iconName]\n          ? iconAliasMapByPrefix[prefix][iconName].push(alias)\n          : (iconAliasMapByPrefix[prefix][iconName] = [alias]);\n      });\n    });\n\n    const iconInfoList: IconInfo[] = [];\n    Object.entries(allIcons).forEach(([prefix, icons]) => {\n      icons.forEach((iconName) => {\n        if (\n          (aliasMapByCategory as Record<string, Record<string, string>>)[\n            prefix\n          ][iconName]\n        )\n          return;\n        const aliases = iconAliasMapByPrefix[prefix][iconName] || [];\n        iconInfoList.push({\n          title: iconName,\n          icon: {\n            lib: \"fa\",\n            prefix,\n            icon: iconName,\n          },\n          $searchTextPool: [iconName, prefix, ...aliases],\n        });\n      });\n    });\n    return {\n      title: \"font awesome\",\n      lib: \"fa\",\n      icons: uniqBy(iconInfoList, \"title\"),\n    };\n  });\n\n  const antdIconLib = getAntdIcons().then((allIcons) => {\n    const iconInfoList: IconInfo[] = [];\n    Object.entries(allIcons).forEach(([theme, icons]) => {\n      icons.forEach((iconName) => {\n        iconInfoList.push({\n          title: iconName,\n          icon: {\n            lib: \"antd\",\n            theme,\n            icon: iconName,\n          },\n          $searchTextPool: [iconName, theme],\n        });\n      });\n    });\n    return { title: \"ant design\", lib: \"antd\", icons: iconInfoList };\n  });\n\n  return Promise.all([easyopsIconLib, antdIconLib, faIconLib]);\n}\n\ncustomElements.define(\"icons.get-libs\", createProviderClass(getLibs));\n","import { createProviderClass } from \"@next-core/utils/general\";\nimport { getLibs, type IconInfo } from \"./get-libs.js\";\n\nexport interface SearchParams {\n  q?: string;\n  lib?: string;\n  page?: number;\n  pageSize?: number;\n}\n\nexport interface SearchResult {\n  list: IconInfo[];\n  page: number;\n  pageSize: number;\n  total: number;\n}\n\nexport async function searchIcons(\n  params?: SearchParams\n): Promise<SearchResult> {\n  const { q = \"\", lib, page = 1, pageSize = 20 } = params || {};\n  const lq = q.trim().toLowerCase();\n\n  const iconInfoList = (await getLibs()).flatMap((v) =>\n    !lib || v.lib === lib ? v.icons : []\n  );\n\n  const filteredList = iconInfoList\n    .filter((iconInfo) =>\n      iconInfo.$searchTextPool.some((searchText) =>\n        searchText.toLowerCase().includes(lq)\n      )\n    )\n    .slice((page - 1) * pageSize, page * pageSize);\n\n  return {\n    page,\n    pageSize,\n    list: filteredList,\n    total: filteredList.length,\n  };\n}\n\ncustomElements.define(\"icons.search-icons\", createProviderClass(searchIcons));\n"],"names":["getEasyopsIcons","_getEasyopsIcons","apply","arguments","_asyncToGenerator","default","getFaIcons","_getFaIcons","getAntdIcons","_getAntdIcons","customElements","define","createProviderClass","getLibs","_getLibs","easyopsIconLib","then","allIcons","iconInfoList","Object","entries","forEach","_ref","category","icons","iconName","push","title","icon","lib","$searchTextPool","faIconLib","Promise","all","_ref2","aliasMapByCategory","iconAliasMapByPrefix","_ref3","prefix","aliasesMap","_ref4","alias","_ref5","aliases","uniqBy","antdIconLib","_ref6","theme","_searchIcons","params","q","page","pageSize","lq","trim","toLowerCase","filteredList","flatMap","v","filter","iconInfo","some","searchText","includes","slice","list","total","length","_x"],"sourceRoot":""}